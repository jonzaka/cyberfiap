name: CD - DAST (ZAP Baseline)

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  dast_zap:
    name: DAST - ZAP Baseline Scan
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      # 1) Tenta puxar e rodar a imagem do ZAP (GHCR) com retry
      - name: Try ZAP via Docker (GHCR) with retry
        id: zap_docker
        run: |
          set -e
          tries=3
          ok=0
          for i in $(seq 1 $tries); do
            echo "Attempt $i to pull and run ZAP from GHCR..."
            if docker pull ghcr.io/zaproxy/zap2docker-stable:latest; then
              echo "Pulled image."
              # roda e grava relatórios no workspace
              docker run --rm \
                -v "${{ github.workspace }}:/zap/wrk/:rw" \
                ghcr.io/zaproxy/zap2docker-stable:latest \
                zap-baseline.py \
                -t http://testphp.vulnweb.com \
                -w /zap/wrk/zap_report.html \
                -J /zap/wrk/zap_report.json || true
              ok=1
              break
            fi
            echo "Pull failed, waiting 10s and retrying..."
            sleep 10
          done
          echo "ok=$ok" >> $GITHUB_OUTPUT

      # 2) Se o Docker falhar (ex.: denied/rate limit), usa a Action oficial sem abrir issue
      - name: Fallback to ZAP Action (no issues)
        if: steps.zap_docker.outputs.ok != '1'
        uses: zaproxy/action-baseline@v0.12.0
        with:
          target: "http://testphp.vulnweb.com"
          cmd_options: "-a -j"        # JSON + um pouco de ativo
          allow_issue_writing: false  # NÃO criar issue
        env:
          GITHUB_TOKEN: ""            # garante que não tentará usar token

      # 3) Mostra o que foi gerado (debug rápido)
      - name: Show generated reports
        run: |
          echo "Workspace files:"
          ls -la
          echo "Looking for ZAP reports:"
          find . -maxdepth 3 -type f \( -name "zap_report*.html" -o -name "zap_report*.json" -o -name "report_html.html" -o -name "report_json.json" \) -print || true

      # 4) Sobe artifacts (cobre os dois nomes possíveis)
      - name: Upload ZAP reports
        uses: actions/upload-artifact@v4
        with:
          name: zap-report
          path: |
            zap_report*.html
            zap_report*.json
            report_html.html
            report_json.json
          if-no-files-found: warn
